{"code":"!function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=0)}([function(t,e,r){\"use strict\";r.r(e);new Vue({el:\"#root\",data:{isError:!1,API:\"http://localhost:3000\"},methods:{getJson(t){return fetch(t).then(t=>t.json()).catch(t=>this.isError=!0)}},components:{products:{data:()=>({catalogUrl:\"/catalogData\",data:[],filteredData:[]}),methods:{filter(t){let e=new RegExp(t,\"i\");this.filtered=this.products.filter(t=>e.test(t.product_name))},makeGETRequest(t,e){let r;window.XMLHttpRequest?r=new XMLHttpRequest:window.ActiveXObject&&(r=new ActiveXObject(\"Microsoft.XMLHTTP\")),r.onreadystatechange=function(){4===r.readyState&&e(r.responseText)},r.open(\"GET\",t,!0),r.setRequestHeader(\"Content-Type\",\"application/json; charset=UTF-8\"),r.send()},makePOSTRequest(t,e,r){let o;window.XMLHttpRequest?o=new XMLHttpRequest:window.ActiveXObject&&(o=new ActiveXObject(\"Microsoft.XMLHTTP\")),o.onreadystatechange=function(){4===o.readyState&&r(o.responseText)},o.open(\"POST\",t,!0),o.setRequestHeader(\"Content-Type\",\"application/json; charset=UTF-8\"),o.send(e)}},mounted(){this.makeGETRequest(this.catalogUrl,t=>{this.data=JSON.parse(t),this.filteredData=JSON.parse(t),console.log(\"goods=\",t)})},components:{\"product-item\":{props:[\"id\",\"img\",\"name\",\"price\"],template:'<div class=\"product-item\" >\\n            <div class=\"desc\" @click=\"buy\">\\n                <img width=\"100\" height=\"140\" :src=\"imgSource\" alt=\"\">\\n                <div>{{this.name}}</div>\\n                <div>{{this.price}}</div>\\n                \\x3c!--<button class=\"buy-btn\" @click=\"$root.$refs.cart.addProduct(product)\">Купить</button>--\\x3e\\n            </div>\\n        </div>',methods:{buy:function(){this.$root.$refs.cart.addProduct(this.id)}},computed:{imgSource:function(){return\"/img/\"+this.img}}}},template:'<div class=\"products\">\\n            <product-item\\n            v-for=\"product of filteredData\"\\n            :key=\"product.id\"\\n            :id=\"product.id\"\\n            :name=\"product.product_name\"\\n            :price=\"product.price\"\\n            :img=\"product.img\">\\n            </product-item>\\n        </div>'},cart:{data:()=>({cartUrl:\"/getBasket.json\",cartItems:[],showCart:!1,imgCart:\"https://placehold.it/50x100\"}),methods:{addProduct(t){this.$parent.getJson(`${this.$root.API}/addToCart`).then(e=>{if(e.result){let e=this.cartItems.find(e=>e.id_product===t.id_product);if(e)e.quantity++;else{let e=Object.assign({quantity:1},t);this.cartItems.push(e)}}else console.log(\"error!\")})},removeProduct(t){this.$parent.getJson(`${API}/deleteFromBasket.json`).then(e=>{e.result?t.quantity>1?t.quantity--:this.cartItems.splice(this.cartItems.indexOf(t),1):console.log(\"error!\")})}},mounted(){},template:'<div>\\n            <button class=\"btn-cart\" type=\"button\" @click=\"showCart = !showCart\">Корзина</button>\\n            <div class=\"cart-block\" v-show=\"showCart\">\\n                        <p v-if=\"!cartItems.length\">Корзина пуста</p>\\n                        <cart-item\\n                        v-for=\"item of cartItems\"\\n                        :key=\"item.id_product\"\\n                        :img=\"imgCart\"\\n                        :cart-item=\"item\"\\n                        @remove=\"remove\"></cart-item>\\n                    </div>\\n            </div>'}},mounted(){console.log(\"root refs = \",this.$refs)}})}]);","extractedComments":[]}